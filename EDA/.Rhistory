install.packages("rbokeh")
remotes::install_github("bokeh/rbokeh")
x<-c(199,240,215,209,230,210,218,215,203,210,218,201,206,216,212)
summary(x)
217-207.5
rm(list=ls())
q()
x<-floor(runif(100,1,7))
summary.aov(x)
summary(x)
t.test(x,conf.level = 0.95)
x<-floor(runif(1000,1,7))
t.test(x,conf.level = 0.95)
t.test(x,conf.level = 0.998)
t.test(x,alternative = "two.sided",conf.level = 0.998)
#(i)
R<-c(0:36)
#(ii)
#(a)
length(R[R<20])/length(R)
#(b)
length(R[R>=10])/length(R)
#(c)
length(R[(R>3)&&(R<=9)])/length(R)
#(c)
length(R[(R>3) & (R<=9)])/length(R)
#(iii)
set.seed(37)
S1<-sample(1000,R)
S1<-sample(x = R,replace = T,size = 1000)
table(S1)
table(S1,frequency(S1))
table(frequency(S1))
#(v)
hist(S1)
#(v)
hist(S1,freq = T)
#(v)
hist(S1,freq = T,labels = T)
#(v)
hist(S1,freq = T,xlim=200,labels = T)
#(v)
hist(S1,freq = T,xlim=c(0,200),labels = T)
#(v)
hist(S1,freq = T,ylim=c(0,200),labels = T)
#(vi)
length(S1[S1<20])/1000
#(vi)
#(a)
length(S1[S1<20])/length(S1)
#(b)
length(S1[S1>=10])/length(S1)
#(c)
length(S1[(S1>3) & (S1<=9)])/length(S1)
#(iii)
set.seed(37)
S1[S1==36]
length(S1[S1==36])
#(v)
hist(S1,freq = T,ylim=c(0,200),labels = T,breaks = seq(from=0,to=36,by=3)
#(v)
hist(S1,freq = T,ylim=c(0,200),labels = T,breaks = seq(from=0,to=36,by=3))
#(v)
hist(S1,freq = T,ylim=c(0,200),labels = T,breaks = seq(from=0,to=36,by=3))
#importing dataset
data1<-read.csv("https://raw.githubusercontent.com/AdiPersonalWorks/Random/master/student_scores%20-%20student_scores.csv")
#processing
cor(data1)
#processing
cor(data1$Hours,data1$Scores)
#processing
r<-cor(data1$Hours,data1$Scores)
predict.lm(data1,9.25)
predict.lm(data1,data1$Hours)
predict.lm(data1)
x<-9.25
predict.lm(data1,x)
#1 marks prediction
#libraries
library(forecast)
forecast(data1)
detach(forecast)
detach("forecast")
detach(name="forecast")
detach("package:forecast")
View(data1)
summary.lm(data1)
summary(data1)
str(data1)
summary(data1)
r<-cor(data1$Hours,data1$Scores)
summary(r)
str(data1)
model1<-lm(Hours~Scores,data=data1)
View(model1)
x<-c(9.5)
model1$coefficients
m<-model1[["coefficients"]]
m
m<-model1[["coefficients"]][["Scores"]]
c<-model1[["coefficients"]][["(Intercept)"]]
model1<-lm(Scores~Hours,data=data1)
model1$coefficients
m<-model1[["coefficients"]][["Scores"]]
c<-model1[["coefficients"]][["(Intercept)"]]
m<-model1[["coefficients"]][["Hours"]]
c<-model1[["coefficients"]][["(Intercept)"]]
y<-m*x+c
y
global.data<-read.csv("https://raw.githubusercontent.com/owid/covid-19-data/master/public/data/owid-covid-data.csv"
,TRUE,sep = ",")
str(global.data)
global.raw<-read.csv("https://raw.githubusercontent.com/owid/covid-19-data/master/public/data/owid-covid-data.csv"
,TRUE,sep = ",")
str(global.raw)
View(global.raw)
global.data<-global.raw %>%
select(iso_code,continent,location,date,total_cases,new_cases,total_deaths,new_deaths,
total_cases_per_million,new_cases_per_million,total_deaths_per_million,new_deaths_per_million)
#8
library(magrittr)
global.data<-global.raw %>%
select(iso_code,continent,location,date,total_cases,new_cases,total_deaths,new_deaths,
total_cases_per_million,new_cases_per_million,total_deaths_per_million,new_deaths_per_million)
library(dplyr)
global.data<-global.raw %>%
select(iso_code,continent,location,date,total_cases,new_cases,total_deaths,new_deaths,
total_cases_per_million,new_cases_per_million,total_deaths_per_million,new_deaths_per_million)
str(global.data)
view(global.data)
View(global.data)
{ #importing global raw data and changing data format from char to data
global.raw<-read.csv("https://raw.githubusercontent.com/owid/covid-19-data/master/public/data/owid-covid-data.csv"
,TRUE,sep = ",")
global.raw$date<-as.Date(global.raw$date)
}
{ #select relevant data variables
global.data<-global.raw %>%
select(iso_code,continent,location,date,total_cases,new_cases,total_deaths,new_deaths,
total_cases_per_million,new_cases_per_million,total_deaths_per_million,new_deaths_per_million)
}
library(ggplot2)
india.data<-global.data %>%
filter(iso_code="IND")
india.data<-global.data %>%
filter(iso_code=="IND")
ggplot(data = india.data,aes(x=total_cases,y=date))
ggplot(data = india.data,aes(x=total_cases,y=date))+
geom_line()
ggplot(data = india.data,aes(x=new_cases,y=date))+
geom_line()
ggplot(data = india.data,aes(y=total_cases,x=date))+
geom_line()
ggplot(data = india.data,aes(y=new_cases,x=date))+
geom_line()
#libraries
library(utils)
data1<-read.csv("https://raw.githubusercontent.com/AdiPersonalWorks/Random/master/student_scores%20-%20student_scores.csv")
str(data1)
cor(data1$Hours,data1$Scores)
#our input
model1<-lm(Scores~Hours,data=data1)
model1$coefficients
View(model1)
#libraries
library(utils)
#importing dataset
data1<-read.csv("https://raw.githubusercontent.com/AdiPersonalWorks/Random/master/student_scores%20-%20student_scores.csv")
str(data1)
cor(data1$Hours,data1$Scores)
#our input
model1<-lm(Scores~Hours,data=data1)
model1$coefficients
m<-model1[["coefficients"]][["Hours"]];m
c<-model1[["coefficients"]][["(Intercept)"]];c
m<-model1[["coefficients"]][["Hours"]];m
c<-model1[["coefficients"]][["(Intercept)"]];c
m<-model1[["coefficients"]][["Hours"]];print("m="+m)
m<-model1[["coefficients"]][["Hours"]];print("m="+as.character(m))
m<-model1[["coefficients"]][["Hours"]];print("m="+as.Character(m))
m<-model1[["coefficients"]][["Hours"]];print("m="+as.Char(m))
m<-model1[["coefficients"]][["Hours"]];print(cat("m=",m))
m<-model1[["coefficients"]][["Hours"]];print("m = %f",m)
m<-model1[["coefficients"]][["Hours"]];print(cat("m = ",m))
m<-model1[["coefficients"]][["Hours"]];print(cat("m = ",m,"\n"))
m<-model1[["coefficients"]][["Hours"]];print(cat("m = ",m,"\n"))
c<-model1[["coefficients"]][["(Intercept)"]];print(cat("c = ",c,"\n"))
m<-model1[["coefficients"]][["Hours"]];print("m = "+as.character(m))
m<-model1[["coefficients"]][["Hours"]];print("m = ",m)
m<-model1[["coefficients"]][["Hours"]];print("m = " && m)
m<-model1[["coefficients"]][["Hours"]];print("m = " & m)
m<-model1[["coefficients"]][["Hours"]]
c<-model1[["coefficients"]][["(Intercept)"]]
m<-model1[["coefficients"]][["Hours"]]
c<-model1[["coefficients"]][["(Intercept)"]]
m<-model1[["coefficients"]][["Hours"]]
c<-model1[["coefficients"]][["(Intercept)"]]
m<-model1[["coefficients"]][["Hours"]];m
c<-model1[["coefficients"]][["(Intercept)"]];c
x<-9.5
y<-m*x+c
y
#libraries
library(utils)
#importing dataset
data1<-read.csv("https://raw.githubusercontent.com/AdiPersonalWorks/Random/master/student_scores%20-%20student_scores.csv")
str(data1)
cor(data1$Hours,data1$Scores)
#libraries
library(utils)
#importing dataset
data1<-read.csv("https://raw.githubusercontent.com/AdiPersonalWorks/Random/master/student_scores%20-%20student_scores.csv")
str(data1)
cor(data1$Hours,data1$Scores)
#our input
model1<-lm(Scores~Hours,data=data1)
model1$coefficients
m<-model1[["coefficients"]][["Hours"]];m
c<-model1[["coefficients"]][["(Intercept)"]];c
m<-model1[["coefficients"]][["Hours"]];m
c<-model1[["coefficients"]][["(Intercept)"]];c
x<-9.5
x<-9.5
y<-m*x+c
y
#libraries
library(utils)
#importing dataset
data1<-read.csv("https://raw.githubusercontent.com/AdiPersonalWorks/Random/master/student_scores%20-%20student_scores.csv")
str(data1)
cor(data1$Hours,data1$Scores)
#our input
model1<-lm(Scores~Hours,data=data1)
model1$coefficients
m<-model1[["coefficients"]][["Hours"]];m
c<-model1[["coefficients"]][["(Intercept)"]];c
m<-model1[["coefficients"]][["Hours"]];m
c<-model1[["coefficients"]][["(Intercept)"]];c
x<-9.5
y<-m*x+c
y
#bike buyers: EDA
library(dplyr)
setwd("E:/Vineet/work/projects/eda")
bikebuyers<-read.csv(file="bike_buyers.csv",stringsAsFactors = TRUE)
str(bikebuyers)
summary(bikebuyers)
bikebuyers<-select(bikebuyers,-ï..ID)
str(bikebuyers)
##
hist(bikebuyers$Income)
summary(bikebuyers$Income)
plot(density(bikebuyers$Income))
#MINI CHALLENGE
#most common commute distance
hist(bikebuyers$Commute.Distance,main="Commute Distance")
#MINI CHALLENGE
#most common commute distance
plot(bikebuyers$Commute.Distance,main="Commute Distance")
#did more people buy bikes or not buy bikes?
plot(bikebuyers$Purchased.Bike,main="Purchased or Not Purchased")
#MINI CHALLENGE
#most common commute distance
summary(bikebuyers$Commute.Distance)
#did more people buy bikes or not buy bikes?
summary(bikebuyers$Purchased.Bike)
plot(bikebuyers$Purchased.Bike,main="Purchased or Not Purchased")
#bike buyers: EDA
library(dplyr)
setwd("E:/Vineet/work/projects/eda")
bikebuyers<-read.csv(file="bike_buyers.csv",stringsAsFactors = TRUE)
str(bikebuyers)
summary(bikebuyers)
bikebuyers<-select(bikebuyers,-ï..ID)
str(bikebuyers)
##
hist(bikebuyers$Income)
summary(bikebuyers$Income)
plot(density(bikebuyers$Income))
#MINI CHALLENGE
#most common commute distance
summary(bikebuyers$Commute.Distance)
plot(bikebuyers$Commute.Distance,main="Commute Distance")
#did more people buy bikes or not buy bikes?
summary(bikebuyers$Purchased.Bike)
plot(bikebuyers$Purchased.Bike,main="Purchased or Not Purchased")
##########
#multivariate
?by
by(bikebuyers$Income,bikebuyers$Education,summary)
?boxplot
boxplot(bikebuyers$Income~bikebuyers$Education,notch = TRUE)
boxplot(bikebuyers$Income~bikebuyers$Education,notch=FALSE)
boxplot(bikebuyers$Income~bikebuyers$Education,notch=TRUE)
?sm
install.packages("sm")
?sm
library(sm)
#medical visuals
library(dplyr)
library(ggplot2)
data = read.csv("E:/Vineet/work/projects/eda/medical/medical.txt",
sep = ",",header = T)
str(data)
data1=data
as.factor(data1['gender'])
as.factor(data1['ap_lo'])
as.factor(data1['cholesterol'])
list_factor = c('gender','cholesterol','gluc','smoke','alco','alco','active','cardio')
data1[list_factor] = lapply(X = list_factor,FUN = as.factor())
is.factor(data1[list_factor])
is.factor(data1['gender','cholesterol'])
is.factor(data1['gender'])
as.factor(data1['gender'])
as.factor(data1[,'gender'])
data1[,'gender']
data1 <- data1 %>%
mutate(
data[,list_factor]<-lapply(data1[list_factor], factor)
)
data1 <- data1 %>%
mutate(
data[,list_factor]<-lapply(data1[,list_factor], factor)
)
data1 <- data1 %>%
mutate(
data1[,list_factor]=lapply(data1[,list_factor], factor)
)
data1[,list_factor]=lapply(data1[,list_factor], factor)
str(data1)
n_factor = c(3,9:-1)
n_factor = c(3,8:13)
data1[,n_factor]=lapply(data1[,n_factor], factor)
str(data1)
barplot(data1)
plot(data1)
hist(x = data1[,n_factor])
